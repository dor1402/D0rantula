{"version":3,"sources":["Assets/Images/finalLogo.png","components/Background/bgStyles.tsx","config.tsx","components/Background/Shape/Shape.tsx","components/Background/functions.tsx","components/Background/Background.tsx","components/Home/Home.tsx","components/Container.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["bgStyles","generateShapeStyles","left","width","height","speed","delay","color","backgroundColor","borderRadius","animationDelay","animationDuration","generateRandomStyleNumber","min","max","rand","Math","random","flooredRand","floor","config","colorOpacity","minSpeed","maxSpeed","minSize","maxSize","minDelay","maxDelay","minLeft","maxLeft","Shape","props","useState","Number","setSpeed","setHeight","setDelay","setWidth","setLeft","Object","style","setStyle","timer","updater","cb","setInterval","map","update","className","bgFunctions","generateShapes","amount","shapeArrays","index","push","Background","shape","Home","checked","setChecked","useEffect","Slide","direction","in","timeout","mountOnEnter","unmountOnExit","src","finalLogo","alt","routes","path","component","Container","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAAe,G,MAAA,IAA0B,uCC+C1BA,EALE,CACbC,oBAjCwB,SAACC,EAAcC,EAAeC,EAAgBC,EAAeC,GACrF,MACI,CAEIJ,KAAK,GAAD,OAAKA,EAAL,KACJK,MAAO,wBACPC,gBAAiB,wBACjBL,MAAM,GAAD,OAAKA,EAAL,MACLC,OAAO,GAAD,OAAKA,EAAL,MACNK,aAAa,OACbC,eAAe,GAAD,OAAKJ,EAAL,KACdK,kBAAkB,GAAD,OAAKN,EAAL,OAuBzBO,0BAV8B,SAACC,EAAaC,GAC5C,IAAMC,EAAOC,KAAKC,SACZC,EAAsBF,KAAKG,MAAMJ,EAAOD,EAAM,GACpD,OACII,EAAcL,EAAMK,EAAcL,ICvB3BO,EAfA,CACXC,aAAc,GAEdC,SAAU,GACVC,SAAU,EAEVC,QAAS,EACTC,QAAS,GAETC,SAAU,EACVC,SAAU,EAEVC,QAAS,EACTC,QAAS,I,OCsCEC,EAvC8B,SAACC,GAE1C,MAA0BC,mBAASC,QAAnC,mBAAO5B,EAAP,KAAc6B,EAAd,KACA,EAA4BF,mBAASC,QAArC,mBAAO7B,EAAP,KAAe+B,EAAf,KACA,EAA0BH,mBAASC,QAAnC,mBAAO3B,EAAP,KAAc8B,EAAd,KACA,EAA0BJ,mBAASC,QAAnC,mBAAO9B,EAAP,KAAckC,EAAd,KACA,EAAwBL,mBAASC,QAAjC,mBAAO/B,EAAP,KAAaoC,EAAb,KACA,EAA0BN,mBAASO,QAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BT,mBAAS3B,EAAQC,GAA3C,mBAAOoC,EAAP,KAGMC,GAHN,KAGgB,CACZ,CAACC,GAAIV,EAAUrB,IAAKO,EAAOE,SAAUR,IAAKM,EAAOG,UACjD,CAACqB,GAAIT,EAAWtB,IAAKO,EAAOI,QAASV,IAAKM,EAAOK,SACjD,CAACmB,GAAIP,EAAUxB,IAAKO,EAAOI,QAASV,IAAKM,EAAOK,SAChD,CAACmB,GAAIR,EAAUvB,IAAKO,EAAOM,SAAUZ,IAAKM,EAAOO,UACjD,CAACiB,GAAIN,EAASzB,IAAKO,EAAOQ,QAASd,IAAKM,EAAOS,WAiBnD,OAXAgB,aAAY,WAERF,EAAQG,KACJ,SAACC,GACGA,EAAOH,GAAG5C,EAASY,0BAA0BmC,EAAOlC,IAAKkC,EAAOjC,SAGxE2B,EAASzC,EAASC,oBAAoBC,EAAMC,EAAOC,EAAQC,EAAOC,MACnEoC,GAIC,oBAAIM,UAAWR,EAAf,oBCnBOS,EAJ2B,CACtCC,eAfmB,SAACC,GAEpB,IADA,IAAIC,EAAkC,GAC7BC,EAAQ,EAAGA,EAAQF,EAAQE,IAChCD,EAAYE,KAAK,cAAC,EAAD,CAAOjD,MAAO,EAAGC,MAAO,GAAQ+C,IAErD,OACGD,ICkBQG,G,MArByC,SAACxB,GAMrD,OACI,qBAAKiB,UAAU,aAAf,SACI,oBAAIA,UAAU,WAAd,SACKC,EAAYC,eAAenB,EAAMoB,QAAQL,KACtC,SAACU,GACG,OACIA,WCiBbC,EA9BiB,WAE5B,IAGA,EAA8BzB,oBAAS,GAAvC,mBAAO0B,EAAP,KAAgBC,EAAhB,KASA,OALAC,qBAAU,WACND,GAAW,KACZ,IAIC,qCACA,qBAAKX,UAAU,YAAf,SACI,cAACa,EAAA,EAAD,CAAOC,UAAU,KAAKC,GAAIL,EAASM,QAAS,IAAMC,cAAY,EAACC,eAAa,EAA5E,SACI,sBAAKlB,UAAU,QAAf,UACA,qBAAKA,UAAW,OAAQmB,IAAKC,EAAWC,IAAI,SAC5C,oBAAI7B,MAAO,CAACjC,MAAO,cAAnB,gCAIR,cAAC,EAAD,CAAY4C,OAAQ,QCvBtBmB,EAAS,CACX,CAAEC,KAAM,IAAKC,UAAW,cAAC,EAAD,MA2BbC,EAxBG,WAId,OACI,mCACI,cAAC,IAAD,UACI,cAAC,IAAD,UACKH,EAAOxB,KACJ,SAAC4B,GACG,OACI,cAAC,IAAD,CAAuBH,KAAMG,EAAKH,KAAlC,SACKG,EAAKF,WADEE,EAAKH,gBChBlCI,G,MARH,WACV,OACE,mCACA,cAAC,EAAD,QCQWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa2ef25e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/finalLogo.bd9edf97.png\";","\r\n\r\n/**\r\n * Creates a css object which conatins the styles for the moving shapes in the background\r\n * @param left how much to move the shape to the left\r\n * @param width the width of the shape\r\n * @param speed the speed of the shape\r\n * @param delay the delay before the shape begins to move\r\n * @returns object which contains css of the shape\r\n */\r\nconst generateShapeStyles = (left: number, width: number, height: number, speed: number, delay: number) => {\r\n    return (\r\n        {\r\n            // the css of a li element which is displayd in the dom as a shape\r\n            left: `${left}%`,\r\n            color: 'whitesmoke !important',\r\n            backgroundColor: 'whitesmoke !important',\r\n            width: `${width}px`,\r\n            height: `${height}px`,\r\n            borderRadius: `75px`,\r\n            animationDelay: `${delay}s`,\r\n            animationDuration: `${speed}s`,\r\n        }\r\n    )\r\n\r\n}\r\n\r\n\r\n/**\r\n * Generates a random number between min and max for style usings in the Shape component\r\n * @param min the minimum value which can be returned\r\n * @param max the maximum value which can be returned\r\n * @returns a random natural value between min (will be bigger than 0) and max\r\n */\r\nconst generateRandomStyleNumber = (min: number, max: number) => {\r\n    const rand = Math.random()\r\n    const flooredRand: number = Math.floor(rand * max + 1)\r\n    return (\r\n        flooredRand > min ? flooredRand : min\r\n    )\r\n}\r\n\r\nconst bgStyles = {\r\n    generateShapeStyles,\r\n    generateRandomStyleNumber\r\n}\r\n\r\nexport default bgStyles\r\n\r\n","const config = {\r\n    colorOpacity: 0.1,\r\n\r\n    minSpeed: 20,\r\n    maxSpeed: 3,\r\n\r\n    minSize: 5,\r\n    maxSize: 15,\r\n\r\n    minDelay: 0,\r\n    maxDelay: 4,\r\n\r\n    minLeft: 0,\r\n    maxLeft: 85\r\n}\r\nexport default config","// Outer project imports\r\nimport { FunctionComponent, useState } from 'react';\r\n// Inner project imports\r\nimport bgStyles from '../bgStyles';\r\nimport config from '../../../config';\r\nimport updateInterface from './updateInterface';\r\n\r\nexport interface ShapeProps {\r\n    speed: Number,\r\n    delay: Number\r\n}\r\n\r\nconst Shape: FunctionComponent<ShapeProps> = (props: ShapeProps) => {\r\n    // hooks\r\n    const [speed, setSpeed] = useState(Number);\r\n    const [height, setHeight] = useState(Number);\r\n    const [delay, setDelay] = useState(Number);\r\n    const [width, setWidth] = useState(Number);\r\n    const [left, setLeft] = useState(Number)\r\n    const [style, setStyle] = useState(Object);\r\n    const [timer, setTimer] = useState(speed + delay);\r\n    \r\n    // variables\r\n    const updater = [ // array which contains object from the updateInterface interface\r\n        {cb: setSpeed, min: config.minSpeed, max: config.maxSpeed},\r\n        {cb: setHeight, min: config.minSize, max: config.maxSize},\r\n        {cb: setWidth, min: config.minSize, max: config.maxSize},\r\n        {cb: setDelay, min: config.minDelay, max: config.maxDelay},\r\n        {cb: setLeft, min: config.minLeft, max: config.maxLeft}\r\n    ]\r\n    \r\n\r\n    // main\r\n    \r\n    setInterval(() => {\r\n        // set all the styles\r\n        updater.map(\r\n            (update: updateInterface) => {\r\n                update.cb(bgStyles.generateRandomStyleNumber(update.min, update.max))\r\n            }\r\n        )\r\n        setStyle(bgStyles.generateShapeStyles(left, width, height, speed, delay))\r\n    }, timer);\r\n\r\n    // render\r\n    return (\r\n        <li className={style}>shape</li>\r\n        // \r\n    )\r\n}\r\n\r\nexport default Shape","// Outer project imports\r\n\r\n// Inner project imports\r\nimport Shape from './Shape/Shape';\r\n/**\r\n * Generates array of object which looks like: {binaryNumber, X, Y, Size}\r\n * @param amount how many numbers to return\r\n * @returns array of objects\r\n */\r\nconst generateShapes = (amount: Number): Array<JSX.Element> => {\r\n    let shapeArrays: Array<JSX.Element> = []\r\n    for (let index = 0; index < amount; index++) {\r\n        shapeArrays.push(<Shape speed={8} delay={2} key={index} />)\r\n    }\r\n    return (\r\n       shapeArrays \r\n    )\r\n}\r\n\r\ninterface bgFunctionsInterface {\r\n    generateShapes: Function\r\n}\r\n\r\nconst bgFunctions: bgFunctionsInterface = {\r\n    generateShapes,\r\n}\r\n\r\nexport default bgFunctions","// Outer project imports\r\nimport { FunctionComponent } from 'react';\r\n\r\n// Inner project imports\r\nimport bgFunctions from './functions';\r\nimport '../../Assets/CSS/Background.css';\r\n\r\n// props interface\r\nexport interface BackgroundProps {\r\n    amount: Number\r\n}\r\n\r\nconst Background: FunctionComponent<BackgroundProps>  = (props: BackgroundProps): JSX.Element => {\r\n    // variables\r\n    /* \r\n        make a function which generates shapes<Shape> into an array to then render it\r\n    */\r\n    // render\r\n    return (\r\n        <div className=\"background\">\r\n            <ul className=\"box-area\">\r\n                {bgFunctions.generateShapes(props.amount).map(\r\n                    (shape: JSX.Element) => {\r\n                        return (\r\n                            shape\r\n                        )\r\n                    }\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Background","// Outer project imports\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { useState, useEffect, createRef, FunctionComponent} from 'react';\r\n\r\n// Inner project imports\r\nimport '../../Assets/CSS/Home.css';\r\nimport finalLogo from '../../Assets/Images/finalLogo.png';\r\nimport coolLogo from '../../Assets/Images/coolLogo.png'\r\nimport Background from '../Background/Background';\r\n\r\n\r\nconst Home: FunctionComponent = () => {\r\n    // variables\r\n    const ref = createRef();\r\n\r\n    // hooks\r\n    const [checked, setChecked] = useState(false);\r\n\r\n\r\n    // main\r\n    useEffect(() => {\r\n        setChecked(true)\r\n    }, []);\r\n\r\n    // render\r\n    return ( \r\n        <>\r\n        <div className=\"container\">\r\n            <Slide direction=\"up\" in={checked} timeout={1000} mountOnEnter unmountOnExit>\r\n                <div className=\"slide\">\r\n                <img className={\"logo\"} src={finalLogo} alt=\"logo\"/>\r\n                <h1 style={{color: \"whitesmoke\"}}>kobi ma boy</h1>\r\n                </div>\r\n            </Slide>\r\n        </div >\r\n        <Background amount={6} />\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home","// Outer project imports\r\nimport React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\n// Inner project imports\r\nimport Home from './Home/Home';\r\n\r\n// global variables\r\nconst routes = [\r\n    { path: \"/\", component: <Home /> },\r\n]\r\n\r\nconst Container = () => {\r\n\r\n\r\n    // render\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    {routes.map(\r\n                        (item) => {\r\n                            return (\r\n                                <Route key={item.path} path={item.path}>\r\n                                    {item.component}\r\n                                </Route>\r\n                            )\r\n                        }\r\n                    )}\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Container","import Container from './components/Container';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n    <Container />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}